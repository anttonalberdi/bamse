##
# Global
##

rule get_paths:
    input:
        bamsepath=expand("{bamsepath}", bamsepath=config['bamsepath']),
        parampath=expand("{parampath}", parampath=config['parampath']),
        logpath=expand("{logpath}", logpath=config['logpath'])
##
# Error learning and dada2
##

rule dada2a:
    input:
        dir="{projectpath}/2-Filtered/{run}"
    threads: 8
    output:
        rds="{projectpath}/3-DADA2/{run}.rds"
    params:
        pattern="fastq",
        overlap=expand("{overlap}", overlap=config['overlap'])
    shell:
        """
        mkdir -p {wildcards.projectpath}/3-DADA2
        echo "\tLearning error rates from samples in run {wildcards.run}" >> {rules.get_paths.input.logpath}
        echo "\nLearning error rates from samples in run {wildcards.run}"
        Rscript {rules.get_paths.input.bamsepath}/bin/bamse-dada2a.R -i {input.dir} -o {output.rds} -p {params.pattern} -v {params.overlap} -l {rules.get_paths.input.logpath}
        """

rule dada2a_rev:
    input:
        dir="{projectpath}/2-Filtered/{run}"
    threads: 8
    output:
        rds="{projectpath}/3-DADA2/{run}.rev.rds"
    params:
        pattern="rev.fastq",
        overlap=expand("{overlap}", overlap=config['overlap'])
    shell:
        """
        mkdir -p {wildcards.projectpath}/3-DADA2
        echo "\tLearning error rates from reversed samples in run {wildcards.run}" >> {rules.get_paths.input.logpath}
        echo "\nLearning error rates from reversed samples in run {wildcards.run}"
        Rscript {rules.get_paths.input.bamsepath}/bin/bamse-dada2a.R -i {input.dir} -o {output.rds} -p {params.pattern} -v {params.overlap} -l {rules.get_paths.input.logpath}
        """
